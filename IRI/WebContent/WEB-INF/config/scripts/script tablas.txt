
DROP TABLE TM_CERTIFICADOS CASCADE CONSTRAINTS;

CREATE TABLE TM_CERTIFICADOS (
       CERTIFICADO_ID       NUMBER NOT NULL,
       AREA_REG_ID          CHAR(5) NOT NULL,
       TPO_CERTIFICADO      CHAR(1) NOT NULL,
       SERVICIO_ID          NUMBER NOT NULL,
       NOMBRE               VARCHAR2(100) NOT NULL,
       TPO_PERSONA          CHAR(1) NOT NULL,
       ESTADO               CHAR(1) NOT NULL,
       PRIMARY KEY (CERTIFICADO_ID), 
       FOREIGN KEY (AREA_REG_ID)
                             REFERENCES TM_AREA_REGISTRAL, 
       FOREIGN KEY (SERVICIO_ID)
                             REFERENCES TM_SERVICIO
);

COMMENT ON TABLE TM_CERTIFICADOS IS 'Tabla que registra los tipos de certificados disponibles.';
COMMENT ON COLUMN TM_CERTIFICADOS.CERTIFICADO_ID IS 'Codigo del Tipo de Certificado';
COMMENT ON COLUMN TM_CERTIFICADOS.AREA_REG_ID IS 'ID del Area Registral al que pertenece el Certificado';
COMMENT ON COLUMN TM_CERTIFICADOS.TPO_CERTIFICADO IS 'Tipo de Certificado:
L = Copia Literal
N = Certificado Negativo';
COMMENT ON COLUMN TM_CERTIFICADOS.SERVICIO_ID IS 'Identificador de Servicio';
COMMENT ON COLUMN TM_CERTIFICADOS.NOMBRE IS 'Nombre del Tipo de certificado';
COMMENT ON COLUMN TM_CERTIFICADOS.TPO_PERSONA IS 'Tipo de Persona que puede ser objeto de la solicitud:
N = Natural
J = Jurídica
A = Ambos';
COMMENT ON COLUMN TM_CERTIFICADOS.ESTADO IS 'Estado del Certificado:
1=Activo
0=Inactivo';

DROP TABLE SOLICITUD CASCADE CONSTRAINTS;

CREATE TABLE SOLICITUD (
       SOLICITUD_ID         NUMBER NOT NULL,
       ESTADO               CHAR(1) NOT NULL,
       CUENTA_ID            NUMBER NOT NULL,
       SUBTOTAL             NUMBER(12,2) NOT NULL,
       GASTO_ENVIO          NUMBER(12,2) NOT NULL,
       TOTAL                NUMBER(12,2) NOT NULL,
       TS_CREA              DATE DEFAULT SYSDATE NOT NULL,
       TS_MODI              DATE NOT NULL,
       USR_CREA             VARCHAR2(15) NOT NULL,
       USR_MODI             VARCHAR2(15) NOT NULL,
       PRIMARY KEY (SOLICITUD_ID), 
       FOREIGN KEY (CUENTA_ID)
                             REFERENCES CUENTA
                             ON DELETE SET NULL
);

COMMENT ON TABLE SOLICITUD IS 'Tabla que registra todas las solicitudes que los usuarios presentan.';
COMMENT ON COLUMN SOLICITUD.SOLICITUD_ID IS 'Identificador único de la Solicitud.';
COMMENT ON COLUMN SOLICITUD.ESTADO IS 'Estado de la Solicitud:
P = Por Pagar
C = Por Verficar
V = Por Emitir
E = Por Despachar
D = Despachada
X = Cancelada
I = Improcedente';
COMMENT ON COLUMN SOLICITUD.CUENTA_ID IS 'Identificador unico de cuenta Id del usuario que registro la solicitud en la Extranet. Puede ser el cajero o el usuario externo.';
COMMENT ON COLUMN SOLICITUD.SUBTOTAL IS 'Sub Total de la Solicitud.';
COMMENT ON COLUMN SOLICITUD.GASTO_ENVIO IS 'Gasto adicional por envío a domicilio.';
COMMENT ON COLUMN SOLICITUD.TOTAL IS 'Costo total de la solicitud. Representa el monto que finalmente paga el usuario.';
COMMENT ON COLUMN SOLICITUD.TS_CREA IS 'Fecha y hora de creacion de la solicitud.';
COMMENT ON COLUMN SOLICITUD.TS_MODI IS 'Fecha y hora de modificacion de la solicitud.';
COMMENT ON COLUMN SOLICITUD.USR_CREA IS 'Nombre del usuario que crea la solicitud.';
COMMENT ON COLUMN SOLICITUD.USR_MODI IS 'Nombre del usuario que modifica la solicitud.';

DROP TABLE OBJETO_SOLICITUD CASCADE CONSTRAINTS;

CREATE TABLE OBJETO_SOLICITUD (
       OBJETO_SOL_ID        NUMBER NOT NULL,
       SOLICITUD_ID         NUMBER NOT NULL,
       REG_PUB_ID           CHAR(2) NOT NULL,
       OFIC_REG_ID          CHAR(2) NOT NULL,
       CERTIFICADO_ID       NUMBER NOT NULL,
       REFNUM_PART          NUMBER NULL,
       NS_ASIENTO           NUMBER(5) NULL,
       COD_ACTO             CHAR(5) NULL,
       AA_TITU              CHAR(4) NULL,
       NUM_TITU             CHAR(8) NULL,
       NUMPAG               NUMBER NULL,
       TPO_PERS             CHAR(1) NULL,
       APE_PAT              VARCHAR2(30) NULL,
       APE_MAT              VARCHAR2(30) NULL,
       NOMBRES              VARCHAR2(40) NULL,
       RAZ_SOC              VARCHAR2(100) NULL,
       SUBTOTAL             NUMBER(12,2) NOT NULL,
       NUM_PLACA      CHAR(7)           NULL,
       NS_ASIE_PLACA  NUMBER(3)         NULL,
       PRIMARY KEY (OBJETO_SOL_ID), 
       FOREIGN KEY (CERTIFICADO_ID)
                             REFERENCES TM_CERTIFICADOS
                             ON DELETE SET NULL, 
       FOREIGN KEY (SOLICITUD_ID)
                             REFERENCES SOLICITUD, 
       FOREIGN KEY (REG_PUB_ID, OFIC_REG_ID)
                             REFERENCES OFIC_REGISTRAL
);

COMMENT ON TABLE OBJETO_SOLICITUD IS 'Tabla en donde se almacenan los objetos de la solicitud. El objeto de la solicitud es aquello que se solicita. Por ejemplo el certificado negativo de propiedad de una empresa, o la copia literal de una partida. Solo se permite solicitar un certificado a la vez, o una copia literal de una partida.';
COMMENT ON COLUMN OBJETO_SOLICITUD.OBJETO_SOL_ID IS 'Identificador único del objeto de la solicitud.';
COMMENT ON COLUMN OBJETO_SOLICITUD.SOLICITUD_ID IS 'Identificador único de la Solicitud';
COMMENT ON COLUMN OBJETO_SOLICITUD.REG_PUB_ID IS 'Codigo de Zona Registral del Objeto de la Solicitud.';
COMMENT ON COLUMN OBJETO_SOLICITUD.OFIC_REG_ID IS 'Codigo de Oficina Registral del Objeto de la Solicitud.';
COMMENT ON COLUMN OBJETO_SOLICITUD.CERTIFICADO_ID IS 'Codigo del Tipo de Certificado solicitado.';
COMMENT ON COLUMN OBJETO_SOLICITUD.REFNUM_PART IS 'Identificador Interno de Partida, en los casos de copia literal. Nulo en los casos de solicitud de certificado negativo.';
COMMENT ON COLUMN OBJETO_SOLICITUD.NS_ASIENTO IS 'Numero secuencial de asiento, se utiliza en los casos de copia literal de asiento electrónico. Nulo en el resto de casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.COD_ACTO IS 'Guarda el código de acto registral a inscribir, se utiliza en los casos de copia literal del asiento electrónico. Nulo en el resto de casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.AA_TITU IS 'Año del titulo del asiento electrónico en los casos de copia literal. Nulo en el resto de los casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.NUM_TITU IS 'Número del titulo del asiento electrónico en los casos de copia literal. Nulo en el resto de los casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.NUMPAG IS 'Número Total de Páginas del Asiento o la Partida cuya copia literal ha sido solicitada. Nulo en el resto de los casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.TPO_PERS IS 'Tipo de Persona del Objeto de la Solicitud de Certificado. Se utiliza en los casos de solicitar Certificado Negativo.
N=Natural
J=Jurídica
Nulo en el resto de casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.APE_PAT IS 'Apellido Paterno del Objeto de la Solicitud. Se utiliza en los casos de solicitar Certificado Negativo de una Persona Natural. Nulo en el resto de casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.APE_MAT IS 'Apellido Materno del Objeto de la Solicitud. Se utiliza en los casos de solicitar Certificado Negativo de una Persona Natural. Nulo en el resto de casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.NOMBRES IS 'Nombres del Objeto de la Solicitud. Se utiliza en los casos de solicitar Certificado Negativo de una Persona Natural. Nulo en el resto de casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.RAZ_SOC IS 'Razón Social del Objeto de la Solicitud. Se utiliza en los casos de solicitar Certificado Negativo de una Persona Jurídica. Nulo en el resto de casos.';
COMMENT ON COLUMN OBJETO_SOLICITUD.SUBTOTAL IS 'Costo del objeto de la solicitud. Si es una copia literal, entonces es igual al costo por página multiplicado por el número de páginas. Si es un certificado negativo, entonces es igual al costo del certificado negativo.'
COMMENT ON COLUMN OBJETO_SOLICITUD.NUM_PLACA IS 'Numero de placa (Solo RPV)'
COMMENT ON COLUMN OBJETO_SOLICITUD.NS_ASIE_PLACA IS 'Numero Secuencial de Asiento (Solo RPV)';



DROP TABLE CERTIFICADO CASCADE CONSTRAINTS;

CREATE TABLE CERTIFICADO (
       CERTIFICADO_ID       NUMBER NOT NULL,
       SOLICITUD_ID         NUMBER NOT NULL,
       OBJETO_SOL_ID        NUMBER NOT NULL,
       TPO_CERTIFICADO      CHAR(1) NOT NULL,
       COMENTARIO           VARCHAR2(1024) NULL,
       REG_PUB_ID           CHAR(2) NULL,
       OFIC_REG_ID_VERIF    CHAR(2) NULL,
       OFIC_REG_ID_EXP      CHAR(2) NULL,
       TS_VERIFICACION      DATE NULL,
       TS_EXPEDICION        DATE NULL,
       TS_CREA              DATE NOT NULL,
       TS_MODI              DATE NULL,
       USR_CREA             VARCHAR2(15) NOT NULL,
       USR_MODI             VARCHAR2(15) NULL,
       PRIMARY KEY (CERTIFICADO_ID), 
       FOREIGN KEY (OBJETO_SOL_ID)
                             REFERENCES OBJETO_SOLICITUD
                             ON DELETE SET NULL
);

COMMENT ON COLUMN CERTIFICADO.OBJETO_SOL_ID IS 'Identificador único del objeto de la solicitud.';
COMMENT ON COLUMN CERTIFICADO.TPO_CERTIFICADO IS 'I: improcedente
N: Certificado Negativo 
P: Certificado Positivo
';

DROP TABLE CERTIFICADO_LIBRO CASCADE CONSTRAINTS;

CREATE TABLE CERTIFICADO_LIBRO (
       CERTIFICADO_ID       NUMBER NOT NULL,
       COD_LIBRO            CHAR(3) NOT NULL,
       PRIMARY KEY (CERTIFICADO_ID, COD_LIBRO), 
       FOREIGN KEY (COD_LIBRO)
                             REFERENCES TM_LIBRO, 
       FOREIGN KEY (CERTIFICADO_ID)
                             REFERENCES TM_CERTIFICADOS
);

COMMENT ON TABLE CERTIFICADO_LIBRO IS 'Tabla en donde se almacena la relación de libros registrales que están dentro del alcance de un certificado.';
COMMENT ON COLUMN CERTIFICADO_LIBRO.CERTIFICADO_ID IS 'Identificador único del Tipo de Certificado.';
COMMENT ON COLUMN CERTIFICADO_LIBRO.COD_LIBRO IS 'Identificador único del Libro Registral.';

DROP TABLE TM_GRUPO CASCADE CONSTRAINTS;

CREATE TABLE TM_GRUPO (
       GRUPO_ID             NUMBER NOT NULL,
       DESCRIPCION          VARCHAR2(30) NOT NULL,
       PRIMARY KEY (GRUPO_ID)
);

COMMENT ON TABLE TM_GRUPO IS 'Tabla que registra las agrupaciones de libros registrales, que facilitan la administración del sistema.';
COMMENT ON COLUMN TM_GRUPO.GRUPO_ID IS 'Identificador único del grupo.';
COMMENT ON COLUMN TM_GRUPO.DESCRIPCION IS 'Nombre del grupo.';

DROP TABLE GRUPO_LIBRO CASCADE CONSTRAINTS;

CREATE TABLE GRUPO_LIBRO (
       COD_LIBRO            CHAR(3) NOT NULL,
       GRUPO_ID             NUMBER NOT NULL,
       PRIMARY KEY (COD_LIBRO, GRUPO_ID), 
       FOREIGN KEY (GRUPO_ID)
                             REFERENCES TM_GRUPO, 
       FOREIGN KEY (COD_LIBRO)
                             REFERENCES TM_LIBRO
);

COMMENT ON TABLE GRUPO_LIBRO IS 'Tabla en donde se registran las agrupaciones de libros registrales. Una agrupación de libros registrales se utilizan con la finalidad de facilitar la administración del sistema.';
COMMENT ON COLUMN GRUPO_LIBRO.COD_LIBRO IS 'Identificador único del Libro Registral.';
COMMENT ON COLUMN GRUPO_LIBRO.GRUPO_ID IS 'Identificador único de la agrupación de Libros Registrales.';

DROP TABLE PAGO_SOLICITUD CASCADE CONSTRAINTS;

CREATE TABLE PAGO_SOLICITUD (
       PAGO_SOLICITUD_ID    NUMBER NOT NULL,
       SOLICITUD_ID         NUMBER NOT NULL,
       TPO_PAGO             CHAR(1) NOT NULL,
       ABONO_ID             NUMBER NULL,
       MONTO                NUMBER(12,2) NOT NULL,
       TS_CREA              DATE NULL,
       TS_MODI              DATE NULL,
       USR_CREA             VARCHAR2(15) NULL,
       USR_MODI             VARCHAR2(15) NULL,
       PRIMARY KEY (PAGO_SOLICITUD_ID), 
       FOREIGN KEY (ABONO_ID)
                             REFERENCES ABONO
                             ON DELETE SET NULL, 
       FOREIGN KEY (SOLICITUD_ID)
                             REFERENCES SOLICITUD
);

COMMENT ON TABLE PAGO_SOLICITUD IS 'Tabla en donde se registran el resumen del pago de una solicitud.';
COMMENT ON COLUMN PAGO_SOLICITUD.PAGO_SOLICITUD_ID IS 'Identificador único del pago de la solicitud.';
COMMENT ON COLUMN PAGO_SOLICITUD.SOLICITUD_ID IS 'Identificador único de la Solicitud';
COMMENT ON COLUMN PAGO_SOLICITUD.TPO_PAGO IS 'Tipo de Pago:
CH=Cheque
EF=Efectivo
LP=Linea Prepago
TC=Tarjeta de Crédito';
COMMENT ON COLUMN PAGO_SOLICITUD.ABONO_ID IS 'Identificador de Abono.
Se usa en los casos en que la solicitud se ha pagado:
- En ventanilla con cheque o efectivo
- En linea, con tarjeta de crédito';
COMMENT ON COLUMN PAGO_SOLICITUD.MONTO IS 'Número de páginas o número de certificados solicitados';
COMMENT ON COLUMN PAGO_SOLICITUD.TS_CREA IS 'Fecha y hora de creación del registro.';
COMMENT ON COLUMN PAGO_SOLICITUD.TS_MODI IS 'Fecha y hora de modificación del registro.';
COMMENT ON COLUMN PAGO_SOLICITUD.USR_CREA IS 'Usuario que creó el registro.';
COMMENT ON COLUMN PAGO_SOLICITUD.USR_MODI IS 'Usuario que modificó el registro.';

DROP TABLE SGMT_SOLICITUD CASCADE CONSTRAINTS;

CREATE TABLE SGMT_SOLICITUD (
       SGMT_SOLICITUD_ID    NUMBER NOT NULL,
       SOLICITUD_ID         NUMBER NOT NULL,
       ESTADO_INICIAL       CHAR(1) NOT NULL,
       ESTADO_FINAL         CHAR(1) NOT NULL,
       TS_MOVIMIENTO        DATE DEFAULT SYSDATE NOT NULL,
       USR_MOVIMIENTO       VARCHAR2(15) NOT NULL,
       PRIMARY KEY (SGMT_SOLICITUD_ID), 
       FOREIGN KEY (SOLICITUD_ID)
                             REFERENCES SOLICITUD
);

COMMENT ON TABLE SGMT_SOLICITUD IS 'Tabla en donde se registra el seguimiento de la solicitud.';
COMMENT ON COLUMN SGMT_SOLICITUD.SGMT_SOLICITUD_ID IS 'Identificador único del seguimiento de la solicitud.';
COMMENT ON COLUMN SGMT_SOLICITUD.SOLICITUD_ID IS 'Identificador único de la Solicitud.';
COMMENT ON COLUMN SGMT_SOLICITUD.ESTADO_INICIAL IS 'Estado Inicial de la Solicitud:
P = Por Pagar
C = Por Verficar
V = Por Emitir
E = Por Despachar
D = Despachada
X = Cancelada
I = Improcedente
';
COMMENT ON COLUMN SGMT_SOLICITUD.ESTADO_FINAL IS 'Estado Final de la Solicitud:
P = Por Pagar
C = Por Verficar
V = Por Emitir
E = Por Despachar
D = Despachada
X = Cancelada
I = Improcedente';
COMMENT ON COLUMN SGMT_SOLICITUD.TS_MOVIMIENTO IS 'Fecha y hora del cambio de estado.';
COMMENT ON COLUMN SGMT_SOLICITUD.USR_MOVIMIENTO IS 'Nombre del usuario que realiza la acción que produjo el cambio de estado.';

DROP TABLE SOLICITANTE CASCADE CONSTRAINTS;

CREATE TABLE SOLICITANTE (
       SOLICITANTE_ID       NUMBER NOT NULL,
       SOLICITUD_ID         NUMBER NOT NULL,
       TPO_PERS             CHAR(1) NOT NULL,
       APE_PAT              VARCHAR2(30) NULL,
       APE_MAT              VARCHAR2(30) NULL,
       NOMBRES              VARCHAR2(40) NULL,
       RAZ_SOC              VARCHAR2(100) NULL,
       TIPO_DOC_ID          CHAR(2) NULL,
       NUM_DOC_IDEN         VARCHAR2(15) NULL,
       EMAIL                VARCHAR2(40) NULL,
       TS_CREA              DATE DEFAULT SYSDATE NOT NULL,
       PRIMARY KEY (SOLICITANTE_ID), 
       FOREIGN KEY (SOLICITUD_ID)
                             REFERENCES SOLICITUD, 
       FOREIGN KEY (TIPO_DOC_ID)
                             REFERENCES TM_DOC_IDEN
);

COMMENT ON COLUMN SOLICITANTE.SOLICITANTE_ID IS 'Identificador único del solicitante.';
COMMENT ON COLUMN SOLICITANTE.SOLICITUD_ID IS 'Identificador único de la Solicitud.';
COMMENT ON COLUMN SOLICITANTE.TPO_PERS IS 'Tipo de Persona Solicitante:
N=Natural
J=Jurídica';
COMMENT ON COLUMN SOLICITANTE.APE_PAT IS 'Apellido Paterno del Solicitante (para el caso de persona natural).';
COMMENT ON COLUMN SOLICITANTE.APE_MAT IS 'Apellido Materno del Solicitante (para el caso de persona natural).';
COMMENT ON COLUMN SOLICITANTE.NOMBRES IS 'Nombre del Solicitante (para el caso de persona natural).';
COMMENT ON COLUMN SOLICITANTE.RAZ_SOC IS 'Razón Social del Solicitante (para el caso de persona jurídica).';
COMMENT ON COLUMN SOLICITANTE.TIPO_DOC_ID IS 'Codigo de Tipo de Documento (opcional):
 10 = DNI 
 20 = RUC';
COMMENT ON COLUMN SOLICITANTE.NUM_DOC_IDEN IS 'Numero del documento de identidad del Solicitante (opcional).';
COMMENT ON COLUMN SOLICITANTE.EMAIL IS 'Correo electronico del Solicitante (opcional).';
COMMENT ON COLUMN SOLICITANTE.TS_CREA IS 'Fecha de creacion del registro.';

DROP TABLE DESTINATARIO CASCADE CONSTRAINTS;

CREATE TABLE DESTINATARIO (
       DESTINATARIO_ID      NUMBER NOT NULL,
       SOLICITUD_ID         NUMBER NOT NULL,
       TPO_ENV              CHAR(1) NOT NULL,
       PAIS_ID              CHAR(2) NULL,
       DPTO_ID              CHAR(2) NULL,
       PROV_ID              CHAR(2) NULL,
       DIRECC               VARCHAR2(40) NULL,
       DPTO_OTRO            VARCHAR2(30) NULL,
       DISTRITO             CHAR(30) NULL,
       COD_POST             VARCHAR2(30) NULL,
       OFIC_REG_ID          CHAR(2) NOT NULL,
       REG_PUB_ID           CHAR(2) NOT NULL,
       TPO_PERS             CHAR(1) NOT NULL,
       APE_PAT              VARCHAR2(30) NULL,
       APE_MAT              VARCHAR2(30) NULL,
       NOMBRES              VARCHAR2(40) NULL,
       RAZ_SOC              VARCHAR2(100) NULL,
       TIPO_DOC_ID          CHAR(2) NULL,
       NUM_DOC_IDEN         VARCHAR2(15) NULL,
       EMAIL                VARCHAR2(40) NULL,
       TS_CREA              DATE NOT NULL,
       PRIMARY KEY (DESTINATARIO_ID), 
       FOREIGN KEY (SOLICITUD_ID)
                             REFERENCES SOLICITUD, 
       FOREIGN KEY (TIPO_DOC_ID)
                             REFERENCES TM_DOC_IDEN
);

COMMENT ON TABLE DESTINATARIO IS 'Tabla en donde se almacenan los datos del destinatario. Destinatario es la persona autorizada a recibir los resultados de una solicitud.';
COMMENT ON COLUMN DESTINATARIO.DESTINATARIO_ID IS 'Identificador único del destinatario.';
COMMENT ON COLUMN DESTINATARIO.SOLICITUD_ID IS 'Identificador único de la Solicitud.';
COMMENT ON COLUMN DESTINATARIO.TPO_ENV IS 'Tipo de Envío:
D=Envío a Domicilio
V=Recojo por Ventanilla';
COMMENT ON COLUMN DESTINATARIO.PAIS_ID IS 'Codigo de Pais del destinatario. Se usa en los casos en que el envío es a domicilio.';
COMMENT ON COLUMN DESTINATARIO.DPTO_ID IS 'Codigo de departamento del destinatario. Se usa en los casos en que el envío es a domicilio.';
COMMENT ON COLUMN DESTINATARIO.PROV_ID IS 'Codigo de provincia del destinatario. Se usa en los casos en que el envío es a domicilio.';
COMMENT ON COLUMN DESTINATARIO.DIRECC IS 'Direccion del destinatario. Se usa en los casos en que el envío es a domicilio.';
COMMENT ON COLUMN DESTINATARIO.DPTO_OTRO IS 'Otro departamento del destinatario. Se usa en los casos en que el envío es a domicilio.';
COMMENT ON COLUMN DESTINATARIO.DISTRITO IS 'Nombre del distrito del destinatario. Se usa en los casos en que el envío es a domicilio.';
COMMENT ON COLUMN DESTINATARIO.COD_POST IS 'Codigo Postal del destinatario. Se usa en los casos en que el envío es a domicilio.';
COMMENT ON COLUMN DESTINATARIO.OFIC_REG_ID IS 'Codigo de la zona registral de destino.';
COMMENT ON COLUMN DESTINATARIO.REG_PUB_ID IS 'Codigo de la oficina registral del destinatario.';
COMMENT ON COLUMN DESTINATARIO.TPO_PERS IS 'Tipo de Persona autorizada a recojer o recibir los resultados:
N=Natural
J=Jurídica';
COMMENT ON COLUMN DESTINATARIO.APE_PAT IS 'Apellido paterno del destinatario.';
COMMENT ON COLUMN DESTINATARIO.APE_MAT IS 'Apellido materno del destinatario.';
COMMENT ON COLUMN DESTINATARIO.NOMBRES IS 'Nombres del destinatario.';
COMMENT ON COLUMN DESTINATARIO.RAZ_SOC IS 'Razon social del destinatario.';
COMMENT ON COLUMN DESTINATARIO.TIPO_DOC_ID IS 'Codigo de Tipo de Documento (opcional):
 10 = DNI 
 20 = RUC';
COMMENT ON COLUMN DESTINATARIO.NUM_DOC_IDEN IS 'Numero del documento de Identidad del destinatario (opcional).';
COMMENT ON COLUMN DESTINATARIO.EMAIL IS 'Correo electronico del destinatario (opcional).';
COMMENT ON COLUMN DESTINATARIO.TS_CREA IS 'Fecha y hora de creacion del registro.';

DROP TABLE TM_TIPO_VENT CASCADE CONSTRAINTS;

CREATE TABLE TM_TIPO_VENT (
       TIPO_VENT            CHAR(1) NOT NULL,
       DESCRIPCION          VARCHAR2(40) NOT NULL,
       PRIMARY KEY (TIPO_VENT)
);

COMMENT ON TABLE TM_TIPO_VENT IS 'Tabla que registra los tipos de abonos disponibles.';
COMMENT ON COLUMN TM_TIPO_VENT.TIPO_VENT IS 'Tipo de Concepto de Abono:
A=Ampliacion de Cuenta
D=Deposito o Apertura
P=Abono por publicidad certificada (nuevo)';
COMMENT ON COLUMN TM_TIPO_VENT.DESCRIPCION IS 'Nombre del tipo de vent';

DROP TABLE SOLICITUD_X_CARGA CASCADE CONSTRAINTS;

CREATE TABLE SOLICITUD_X_CARGA (
       SOLICITUD_ID         NUMBER NOT NULL,
       CUENTA_ID            NUMBER NOT NULL,
       ROL                  CHAR(2) NOT NULL,
       CTA_ID_REG           NUMBER NOT NULL,
       ESTADO               CHAR(1) NOT NULL,
       PRIORIDAD            NUMBER DEFAULT 0 NOT NULL,
       TS_CREA              DATE NOT NULL,
       TS_MODI              DATE NULL,
       USR_CREA             VARCHAR2(15) NOT NULL,
       USR_MODI             VARCHAR2(15) NULL,
       PRIMARY KEY (SOLICITUD_ID, ROL), 
       FOREIGN KEY (CUENTA_ID)
                             REFERENCES CUENTA, 
       FOREIGN KEY (SOLICITUD_ID)
                             REFERENCES SOLICITUD
);

COMMENT ON TABLE SOLICITUD_X_CARGA IS 'Tabla que guarda la relación entre las solicitudes y los Registradores asignados a atenderla.';
COMMENT ON COLUMN SOLICITUD_X_CARGA.SOLICITUD_ID IS 'Identificador único de la Solicitud.';
COMMENT ON COLUMN SOLICITUD_X_CARGA.CUENTA_ID IS 'Identificador unico de cuenta';
COMMENT ON COLUMN SOLICITUD_X_CARGA.ROL IS 'Rol del Registrador sobre la Solicitud que está en su Carga Registral:
VE=Registrador de Origen (El que califica)
EM=Registrador de Destino (El que despacha)
';
COMMENT ON COLUMN SOLICITUD_X_CARGA.CTA_ID_REG IS 'ID de la Cuenta de Registrador responsable del trabajo. Por defecto es igual al originalmente asignado (osea igual al campo CUENTA_ID). En caso sea necesario una transferencia de la responsabilidad (transferencia de carga laboral), se debe actualizar el valor de este campo.';
COMMENT ON COLUMN SOLICITUD_X_CARGA.ESTADO IS 'Estado de atención de la solicitud:
P = Pendiente de atención
C = Atención completada';
COMMENT ON COLUMN SOLICITUD_X_CARGA.PRIORIDAD IS 'Prioridad de la solicitud:
0 = Primera atención. Prioridad Normal.
1 = N-sima atención. Prioridad Alta.';
COMMENT ON COLUMN SOLICITUD_X_CARGA.TS_CREA IS 'Fecha y hora de asignacion de la solicitud.';
COMMENT ON COLUMN SOLICITUD_X_CARGA.TS_MODI IS 'Fecha y hora de modificacion de la asignacion de la solicitud.';
COMMENT ON COLUMN SOLICITUD_X_CARGA.USR_CREA IS 'Usuario que registro la asignacion de la solicitud.';
COMMENT ON COLUMN SOLICITUD_X_CARGA.USR_MODI IS 'Usuario que modifico la asignacion de la solicitud.';

DROP TABLE CRITERIOS_ASIGNA CASCADE CONSTRAINTS;

CREATE TABLE CRITERIOS_ASIGNA (
       CUENTA_ID            NUMBER NOT NULL,
       REG_PUB_ID           CHAR(2) NOT NULL,
       OFIC_REG_ID          CHAR(2) NOT NULL,
       CERTIFICADO_ID       NUMBER NOT NULL,
       GRUPO_ID             NUMBER NOT NULL,
       ESTADO               CHAR(1) NOT NULL,
       PRIMARY KEY (CUENTA_ID, REG_PUB_ID, OFIC_REG_ID, 
              CERTIFICADO_ID, GRUPO_ID), 
       FOREIGN KEY (CUENTA_ID)
                             REFERENCES CUENTA, 
       FOREIGN KEY (GRUPO_ID)
                             REFERENCES TM_GRUPO, 
       FOREIGN KEY (REG_PUB_ID, OFIC_REG_ID)
                             REFERENCES OFIC_REGISTRAL
                             ON DELETE SET NULL, 
       FOREIGN KEY (CERTIFICADO_ID)
                             REFERENCES TM_CERTIFICADOS
);

COMMENT ON TABLE CRITERIOS_ASIGNA IS 'Tabla en donde se registran los criterios de asignación de solicitudes por carga laboral de registrador.';
COMMENT ON COLUMN CRITERIOS_ASIGNA.CUENTA_ID IS 'Identificador unico de cuenta';
COMMENT ON COLUMN CRITERIOS_ASIGNA.REG_PUB_ID IS 'Codigo de Zona Registral.';
COMMENT ON COLUMN CRITERIOS_ASIGNA.OFIC_REG_ID IS 'Codigo de Oficina Registral.';
COMMENT ON COLUMN CRITERIOS_ASIGNA.CERTIFICADO_ID IS 'Identificador único del Tipo de Certificado';
COMMENT ON COLUMN CRITERIOS_ASIGNA.GRUPO_ID IS 'Identificador único del grupo de libros registrales que un registrador atiende.';
COMMENT ON COLUMN CRITERIOS_ASIGNA.ESTADO IS 'Estado de disponibilidad del Registrador para recibir nuevas solicitudes.
1:Disponible
0: No Disponible
';

DROP TABLE TM_ESTADO_SOLICITUD CASCADE CONSTRAINTS;

CREATE TABLE TM_ESTADO_SOLICITUD (
       ESTADO_SOLICITUD     CHAR(1) NOT NULL,
       MENSAJE_REGISTRADOR  VARCHAR2(80) NOT NULL,
       MENSAJE_USUARIO      VARCHAR2(80) NOT NULL,
       ESTADO               CHAR(1) NOT NULL,
       PRIMARY KEY (ESTADO_SOLICITUD)
);

COMMENT ON COLUMN TM_ESTADO_SOLICITUD.ESTADO_SOLICITUD IS 'Estado de la Solicitud:
P = Por Pagar
C = Por Verficar
V = Por Emitir
E = Por Despachar
D = Despachada
X = Cancelada
I = Improcedente';
COMMENT ON COLUMN TM_ESTADO_SOLICITUD.MENSAJE_REGISTRADOR IS 'Mensaje que se le muestra al registrador.';
COMMENT ON COLUMN TM_ESTADO_SOLICITUD.MENSAJE_USUARIO IS 'Mensaje que se le muestra al usuario.';
COMMENT ON COLUMN TM_ESTADO_SOLICITUD.ESTADO IS 'Estado:
1 = Activo
0 = Inactivo';

DROP TABLE CONSUMO_SOLICITUD CASCADE CONSTRAINTS;

CREATE TABLE CONSUMO_SOLICITUD (
       SOLICITUD_ID         NUMBER NOT NULL,
       CONSUMO_ID           NUMBER NOT NULL,
       OBJETO_SOL_ID        NUMBER NULL,
       PRIMARY KEY (SOLICITUD_ID, CONSUMO_ID), 
       FOREIGN KEY (OBJETO_SOL_ID)
                             REFERENCES OBJETO_SOLICITUD
                             ON DELETE SET NULL, 
       FOREIGN KEY (SOLICITUD_ID)
                             REFERENCES SOLICITUD, 
       FOREIGN KEY (CONSUMO_ID)
                             REFERENCES CONSUMO
);

COMMENT ON TABLE CONSUMO_SOLICITUD IS 'Tabla en donde se registran los consumos en los que incurre un usuario al momento de presentar una solicitud en linea. Se registra un consumo por cada certificado solicitado, por cada copia literal de partida solicitada, y por el servicio de envío a domicilio.';
COMMENT ON COLUMN CONSUMO_SOLICITUD.SOLICITUD_ID IS 'Identificador único de la Solicitud.';
COMMENT ON COLUMN CONSUMO_SOLICITUD.CONSUMO_ID IS 'Identificador único del consumo (debito).';
COMMENT ON COLUMN CONSUMO_SOLICITUD.OBJETO_SOL_ID IS 'Identificador único del objeto de la solicitud. En caso del servicio de delivery este campo es nulo.';

DROP TABLE VERIFICA_ASIENTO CASCADE CONSTRAINTS;

CREATE TABLE VERIFICA_ASIENTO (
       REFNUM_PART          NUMBER NOT NULL,
       NS_ASIENTO           NUMBER(5) NOT NULL,
       OBJETO_SOL_ID        NUMBER NOT NULL,
       COD_ACTO             CHAR(5) NOT NULL,
       TS_INSCRIP           DATE NULL,
       COD_RUBRO            CHAR(3) NOT NULL,
       ES_ASIENTO           CHAR(1) NOT NULL,
       NUM_TITU             CHAR(8) NULL,
       AA_TITU              CHAR(4) NULL,
       ID_IMG_ASIENTO       NUMBER NULL,
       NUMPAG               NUMBER(3) NULL,
       TS_ULT_SYNC          DATE NULL,
       AGNT_SYNC            CHAR(4) NULL,
       CO_ACTO_RGST_ORIG    CHAR(5) NULL,
       CO_RUBR_ORIG         CHAR(3) NULL,
       LETRA_RUBRO          CHAR(1) NULL,
       NUM_PLACA            CHAR(7) NULL,
       NS_ASIE_PLACA        NUMBER(3) NULL,
       PRIMARY KEY (REFNUM_PART, NS_ASIENTO, OBJETO_SOL_ID, COD_ACTO), 
       FOREIGN KEY (OBJETO_SOL_ID)
                             REFERENCES OBJETO_SOLICITUD
);

COMMENT ON TABLE VERIFICA_ASIENTO IS 'Tabla que guarda informacion de asientos de todas las partidas';
COMMENT ON COLUMN VERIFICA_ASIENTO.REFNUM_PART IS 'Identificador Interno de Partida';
COMMENT ON COLUMN VERIFICA_ASIENTO.NS_ASIENTO IS 'Numero secuencial de asiento';
COMMENT ON COLUMN VERIFICA_ASIENTO.OBJETO_SOL_ID IS 'Identificador único del objeto de la solicitud.';
COMMENT ON COLUMN VERIFICA_ASIENTO.COD_ACTO IS 'Guarda el código de acto registral a inscribir';
COMMENT ON COLUMN VERIFICA_ASIENTO.TS_INSCRIP IS 'Fecha y hora de inscripción de asiento';
COMMENT ON COLUMN VERIFICA_ASIENTO.COD_RUBRO IS 'Código de Rubro';
COMMENT ON COLUMN VERIFICA_ASIENTO.ES_ASIENTO IS 'Estado del Asiento 0 : Inactivo 1 : Activo';
COMMENT ON COLUMN VERIFICA_ASIENTO.NUM_TITU IS 'Número de Título que dio origen al asiento';
COMMENT ON COLUMN VERIFICA_ASIENTO.AA_TITU IS 'Año del titulo que dio origen al asiento';
COMMENT ON COLUMN VERIFICA_ASIENTO.ID_IMG_ASIENTO IS 'ID de imagen del asiento almacenado en content Manager';
COMMENT ON COLUMN VERIFICA_ASIENTO.NUMPAG IS 'Numero de páginas del asiento';
COMMENT ON COLUMN VERIFICA_ASIENTO.TS_ULT_SYNC IS 'Fecha y hora de ultima sincronización';
COMMENT ON COLUMN VERIFICA_ASIENTO.AGNT_SYNC IS 'Agente de última sincronización';
COMMENT ON COLUMN VERIFICA_ASIENTO.CO_ACTO_RGST_ORIG IS 'Código de acto registral original (replicado desde oficina)';
COMMENT ON COLUMN VERIFICA_ASIENTO.CO_RUBR_ORIG IS 'Codigo de rubro original (replicado desde cada oficina)';
COMMENT ON COLUMN VERIFICA_ASIENTO.NUM_PLACA IS 'Número de Placa (solo para partidas de RPV)';
COMMENT ON COLUMN VERIFICA_ASIENTO.NS_ASIE_PLACA IS 'Número Secuencial de Asiento por Placa (solo para partidas de RPV)';

DROP TABLE VERIFICA_FICHA CASCADE CONSTRAINTS;

CREATE TABLE VERIFICA_FICHA (
       OBJETO_SOL_ID        NUMBER NOT NULL,
       REFNUM_PART          NUMBER NOT NULL,
       FICHA                CHAR(10) NOT NULL,
       FICHA_BIS            CHAR(1) NOT NULL,
       ID_IMG_FICHA         NUMBER NULL,
       NUMPAG               NUMBER(3) NULL,
       TS_ULT_SYNC          DATE NULL,
       AGNT_SYNC            CHAR(4) NULL,
       PRIMARY KEY (OBJETO_SOL_ID, REFNUM_PART), 
       FOREIGN KEY (OBJETO_SOL_ID)
                             REFERENCES OBJETO_SOLICITUD
);

COMMENT ON COLUMN VERIFICA_FICHA.OBJETO_SOL_ID IS 'Identificador único del objeto de la solicitud.';

DROP TABLE VERIFICA_TOMO_FOJA CASCADE CONSTRAINTS;

CREATE TABLE VERIFICA_TOMO_FOJA (
       REFNUM_PART          NUMBER NOT NULL,
       OBJETO_SOL_ID        NUMBER NOT NULL,
       NS_CADE              NUMBER(4) NOT NULL,
       NU_TOMO              CHAR(6) NOT NULL,
       NU_FOJA              CHAR(6) NOT NULL,
       TOMO_BIS             CHAR(1) NULL,
       FOLIO_BIS            CHAR(1) NULL,
       ESTADO               CHAR(1) NULL,
       ID_IMG_FOLIO         NUMBER NULL,
       TS_ULT_SYNC          DATE NULL,
       AGNT_SYNC            CHAR(4) NULL,
       PRIMARY KEY (REFNUM_PART, OBJETO_SOL_ID, NS_CADE), 
       FOREIGN KEY (OBJETO_SOL_ID)
                             REFERENCES OBJETO_SOLICITUD
);

COMMENT ON COLUMN VERIFICA_TOMO_FOJA.OBJETO_SOL_ID IS 'Identificador único del objeto de la solicitud.';

DROP TABLE VERIFICA_TITU_PEND CASCADE CONSTRAINTS;

CREATE TABLE VERIFICA_TITU_PEND (
       REG_PUB_ID           CHAR(2) NOT NULL,
       OFIC_REG_ID          CHAR(2) NOT NULL,
       NUM_PARTIDA          CHAR(8) NOT NULL,
       ANO_TITU             CHAR(4) NOT NULL,
       NUM_TITU             CHAR(8) NOT NULL,
       AREA_REG_ID          CHAR(5) NOT NULL,
       OBJETO_SOL_ID        NUMBER NOT NULL,
       SISTEMA_ID           CHAR(3) NOT NULL,
       COD_LIBRO            CHAR(3) NULL,
       FICHA                CHAR(10) NULL,
       NU_TOMO              CHAR(6) NULL,
       NU_FOJA              CHAR(6) NULL,
       CO_ACTO              CHAR(5) NULL,
       ESTADO               CHAR(1) NULL,
       TS_ULT_SYNC          DATE NULL,
       AGNT_SYNC            CHAR(4) NULL,
       PRIMARY KEY (REG_PUB_ID, OFIC_REG_ID, NUM_PARTIDA, ANO_TITU, NUM_TITU, AREA_REG_ID, OBJETO_SOL_ID, SISTEMA_ID), 
       FOREIGN KEY (OBJETO_SOL_ID) REFERENCES OBJETO_SOLICITUD
);

COMMENT ON COLUMN VERIFICA_TITU_PEND.OBJETO_SOL_ID IS 'Identificador único del objeto de la solicitud.';


CREATE OR REPLACE VIEW USER1.VW_DIARIORECAUDA 
(
    USR_CAJA,
    RCBO_ASOC,
    TS_CREA,
    ABONO_ID,
    TIPO_USR,
    PERSONA_ID,
    MONTO,
    TIPO_VENT,
    TPO_PAG_VENT,
    ESTADO,
    APE_PAT,
    APE_MAT,
    NOMBRES
)
AS
SELECT "USR_CAJA", "RCBO_ASOC", "TS_CREA", "ABONO_ID",
    "TIPO_USR", "PERSONA_ID","MONTO", "TIPO_VENT", "TPO_PAG_VENT",
    "ESTADO", "APE_PAT", "APE_MAT", "NOMBRES"
FROM (
SELECT USR_CAJA, RCBO_ASOC, TS_CREA, ABONO_ID, TIPO_USR, ABONO.PERSONA_ID,MONTO,TM_TIPO_VENT.descripcion AS TIPO_VENT, TPO_PAG_VENT,ESTADO,RAZ_SOC AS APE_PAT,'' AS APE_MAT,'' AS NOMBRES
FROM ABONO, PE_JURI, TM_TIPO_VENT
WHERE TIPO_USR='O' AND PE_JURI.PERSONA_ID = ABONO.PERSONA_ID AND ABONO.TIPO_VENT in ('A', 'D') AND ABONO.TIPO_VENT = TM_TIPO_VENT.TIPO_VENT
UNION
SELECT USR_CAJA, RCBO_ASOC, TS_CREA, ABONO_ID, TIPO_USR, ABONO.PERSONA_ID,MONTO,TM_TIPO_VENT.descripcion AS TIPO_VENT,TPO_PAG_VENT,ESTADO, APE_PAT, APE_MAT, NOMBRES
FROM ABONO,PE_NATU, TM_TIPO_VENT
WHERE TIPO_USR='I' AND PE_NATU.PERSONA_ID = ABONO.PERSONA_ID AND ABONO.TIPO_VENT in ('A', 'D') AND ABONO.TIPO_VENT = TM_TIPO_VENT.TIPO_VENT
UNION
select USR_CAJA, RCBO_ASOC, a.TS_CREA, a.ABONO_ID, 'O' AS TIPO_USR, -1 AS PERSONA_ID,a.MONTO,tv.descripcion AS TIPO_VENT, TPO_PAG_VENT,ESTADO,RAZ_SOC AS APE_PAT,'' AS APE_MAT,'' AS NOMBRES
from solicitante s, pago_solicitud ps, abono a, TM_TIPO_VENT tv
where a.TIPO_VENT = 'P'
AND s.tpo_pers='J'
AND s.solicitud_id = ps.solicitud_id
AND ps.abono_id = a.abono_id
AND a.TIPO_VENT = tv.TIPO_VENT
union
select USR_CAJA, RCBO_ASOC, a.TS_CREA, a.ABONO_ID, 'I' AS TIPO_USR, -1 AS PERSONA_ID,a.MONTO,tv.descripcion AS TIPO_VENT, TPO_PAG_VENT,ESTADO,APE_PAT,APE_MAT,NOMBRES
from solicitante s, pago_solicitud ps, abono a, TM_TIPO_VENT tv
where a.TIPO_VENT = 'P'
AND s.tpo_pers='N'
AND s.solicitud_id = ps.solicitud_id
AND ps.abono_id = a.abono_id
AND a.TIPO_VENT = tv.TIPO_VENT
)

CREATE OR REPLACE VIEW USER1.VW_RECAUDAENLINEA 
(
    NRO_ABONO_EXTRANET,
    TS_ABONO,
    ESTADO_ABONO,
    CONCEPTO_ABONO,
    NRO_COMPROBANTE_EXTRANET,
    APE_PAT_PAGADOR,
    APE_MAT_PAGADOR,
    NOMBRES_PAGADOR,
    RAZSOC_PAGADOR,
    PERSONA_ID_PAGADOR,
    NRO_PAGO_VISA,
    USR_ID_PAGO,
    MONTO_ABONO,
    TS_SOL_PAGO_VISA,
    TS_RES_PAGO_VISA,
    RC_PAGO_VISA,
    EC_PAGO_VISA,
    ESTADO_PAGO_VISA,
    SOLICITUD_ID
)
AS
SELECT
     --abono
		"NRO_ABONO_EXTRANET","TS_ABONO","ESTADO_ABONO","CONCEPTO_ABONO",
	--comprobante
		"NRO_COMPROBANTE_EXTRANET",
	--pe_natu, pe_juri
		"APE_PAT_PAGADOR","APE_MAT_PAGADOR","NOMBRES_PAGADOR","RAZSOC_PAGADOR",
		"PERSONA_ID_PAGADOR",
	--pago_en_linea
		"NRO_PAGO_VISA","USR_ID_PAGO","MONTO_ABONO","TS_SOL_PAGO_VISA",
		"TS_RES_PAGO_VISA","RC_PAGO_VISA","EC_PAGO_VISA","ESTADO_PAGO_VISA","SOLICITUD_ID"
      FROM 
	 (
	 SELECT /*+ordered*/
		--abono
		a.abono_id as NRO_ABONO_EXTRANET,
		a.ts_crea as TS_ABONO,
		a.estado as ESTADO_ABONO,
		a.tipo_vent as CONCEPTO_ABONO,
		--comprobante
		comp.comprobante_id as NRO_COMPROBANTE_EXTRANET,
		--pe_natu, pe_juri
		NVL(pn.ape_pat,pna.ape_pat) as APE_PAT_PAGADOR,
		NVL(pn.ape_mat,pna.ape_mat) as APE_MAT_PAGADOR,
		NVL(pn.nombres,pna.nombres) as NOMBRES_PAGADOR,
		pj.raz_soc as RAZSOC_PAGADOR,
		pn.persona_id as PERSONA_ID_PAGADOR,
		--pago_en_linea
		pago.pago_en_linea_id as NRO_PAGO_VISA,
		pago.usr_crea as USR_ID_PAGO,
		pago.monto as MONTO_ABONO,
		pago.fec_hor_sol as TS_SOL_PAGO_VISA,
		pago.fec_hor_resp as TS_RES_PAGO_VISA,
		pago.cod_retorno as RC_PAGO_VISA,
		pago.cod_error as EC_PAGO_VISA,
		pago.estado as ESTADO_PAGO_VISA,
		pago.solicitud_id as SOLICITUD_ID
		from user1.pago_en_linea pago, user1.movimiento mov, 
		user1.pe_natu pn, user1.cuenta cta, user1.pe_juri pj, user1.pe_natu pna,
		user1.abono a, user1.comprobante comp, user1.tm_tipo_vent tv
		where pago.movimiento_id=mov.movimiento_id(+)
		and mov.movimiento_id=a.movimiento_id(+)
		and pago.persona_id = pn.persona_id(+)
		and pago.persona_id = pj.persona_id(+)
		and pago.usr_crea = cta.usr_id(+)
		and cta.pe_natu_id = pna.pe_natu_id(+)
		and a.TIPO_VENT = tv.TIPO_VENT(+)
		and a.abono_id = comp.abono_id(+)
	 );


CREATE OR REPLACE VIEW USER1.VW_REGI_CERT_OFIC 
(
    REG_PUB_ID,
    OFIC_REG_ID,
    OFIC_NOMBRE,
    CERTIFICADO_NOMBRE,
    CANTIDAD,
    TIPO_CERTIFICADO
)
AS
select 
certi.reg_pub_id as REG_PUB_ID, 
certi.ofic_reg_id as OFIC_REG_ID, 
certi.ofic_nombre as OFIC_NOMBRE, 
--certi.certificado_id as CERTIFICADO_ID, 
certi.certificado_nombre as CERTIFICADO_NOMBRE, 
count(crite.cuenta_id) as CANTIDAD,
'N' as TIPO_CERTIFICADO
from
   (select ofic.reg_pub_id as reg_pub_id, ofic.ofic_reg_id as ofic_reg_id, ofic.nombre as ofic_nombre,
           certi.certificado_id as certificado_id, certi.nombre as certificado_nombre
    from user1.ofic_registral ofic, user1.tm_certificados certi
    where certi.tpo_certificado='N' and ofic.reg_pub_id not in ('00','14')) certi,
   user1.criterios_asigna crite
where
certi.reg_pub_id = crite.reg_pub_id(+)
and certi.ofic_reg_id = crite.ofic_reg_id(+)
and certi.certificado_id = crite.certificado_id(+)
and ((crite.estado is null) or (crite.estado='1'))
group by certi.reg_pub_id, certi.ofic_reg_id, certi.ofic_nombre, certi.certificado_id, certi.certificado_nombre
UNION ALL
select 
libro.reg_pub_id AS REG_PUB_ID, 
libro.ofic_reg_id AS OFIC_REG_ID, 
libro.ofic_nombre AS OFIC_NOMBRE, 
--libro.libro_id AS CERTIFICADO_ID, 
libro.libro_nombre AS CERTIFICADO_NOMBRE, 
count(crite.cuenta_id) AS CANTIDAD,
'L' as TIPO_CERTIFICADO
from
   (select ofic.reg_pub_id as reg_pub_id, ofic.ofic_reg_id as ofic_reg_id, ofic.nombre as ofic_nombre,
           libro.cod_libro as libro_id, libro.descripcion as libro_nombre, gl.grupo_id
    from user1.ofic_registral ofic, user1.grupo_libro gl, user1.tm_libro libro 
    where ofic.reg_pub_id not in ('00','14') and libro.cod_libro=gl.cod_libro(+)) libro,
   user1.criterios_asigna crite
where
libro.reg_pub_id = crite.reg_pub_id(+)
and libro.ofic_reg_id = crite.ofic_reg_id(+)
and libro.grupo_id = crite.grupo_id(+)
and ((crite.estado is null) or (crite.estado='1'))
group by libro.reg_pub_id, libro.ofic_reg_id, libro.ofic_nombre, libro.libro_id, libro.libro_nombre;



ALTER TABLE USER1.PAGO_EN_LINEA ADD SOLICITUD_ID NUMBER     NULL;
/
COMMENT ON COLUMN USER1.PAGO_EN_LINEA.SOLICITUD_ID IS 'No. Solicitud que esta siendo pagada por el cliente utilizando VISA. Nulo si no es el caso. ';
/

ALTER TABLE USER1.PARAMETROS MODIFY(VALOR  VARCHAR2(80));
/
DROP TABLE USER1.PAGO_EN_LINEA_COMP ;
CREATE TABLE USER1.PAGO_EN_LINEA_COMP 
(
    PAGO_COMP_ID     NUMBER        NOT NULL,
    PAGO_EN_LINEA_ID NUMBER        NOT NULL,
    USR_MODI         VARCHAR2(15)  NOT NULL,
    COMENTARIO       VARCHAR2(255) NOT NULL,
    PRIMARY KEY (PAGO_COMP_ID,PAGO_EN_LINEA_ID), 
    FOREIGN KEY (PAGO_EN_LINEA_ID)
                     REFERENCES PAGO_EN_LINEA( PAGO_EN_LINEA_ID)
);

/
COMMENT ON TABLE USER1.PAGO_EN_LINEA_COMP IS 
'Pagos en linea completados manualmente';
/
COMMENT ON COLUMN USER1.PAGO_EN_LINEA_COMP.PAGO_COMP_ID IS 'Identificador de Pago Completado Manual';
/
COMMENT ON COLUMN USER1.PAGO_EN_LINEA_COMP.COMENTARIO IS 'Glosa de comentario';
/